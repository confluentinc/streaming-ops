buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.21.0"
  }
}

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'io.confluent.kafka-devops.microservices-orders'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
	mavenCentral()
  maven {
    url "https://packages.confluent.io/maven/"
  }
}

apply plugin: "com.commercehub.gradle.plugin.avro"

ext {
	set('springCloudVersion', "Hoxton.SR8")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
  implementation 'org.projectlombok:lombok'
  implementation 'org.apache.avro:avro:1.10.0'
  implementation 'io.confluent:kafka-streams-avro-serde:6.0.0'
  compile "io.vavr:vavr:0.10.3"
  testImplementation 'org.awaitility:awaitility'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
  testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()

  testLogging {
    events "passed", "skipped", "failed"
  }
}
